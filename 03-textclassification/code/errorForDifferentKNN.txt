%% KNN learn

mdlCityCode = ClassificationKNN.fit(X, trainResult(:,1));
mdlCountryCode = ClassificationKNN.fit(X, trainResult(:,2));
%% check quality of KNN with 15 Neighbor
mdlCityCode.NumNeighbors = 15;
mdlCountryCode.NumNeighbors = 15;


 % With 1: 0.6526 / 0.1919
 % With 2:  0.6544 /  0.2040
 % With 3: 0.6067 / 0.1744
 % With 4: 0.5679 / 0.1698
 % With 5:  0.5481 / 0.1675
 % With 15: 0.5128 / 0.1655

rng('default')
kfoldLoss(crossval(mdlCityCode,'kfold',10))
kfoldLoss(crossval(mdlCountryCode,'kfold',10))



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% test on exhaustive cosine

mdlCountryCode = ClassificationKNN.fit(X, trainResult(:,2),'NSMethod','exhaustive',...
    'Distance','cosine');

mdlCityCode = ClassificationKNN.fit(X, trainResult(:,1),'NSMethod','exhaustive',...
    'Distance','cosine');
%% check country
mdlCountryCode.NumNeighbors = 5;
kfoldLoss(crossval(mdlCountryCode,'kfold',10))

%With 1:    0.1786
%With 4:    0.1564
%With 5:    0.1465
%With 6:    0.1505
%With 7:    0.1511
%With 10:   0.1536
%With 15:   0.1536

%% check city
mdlCityCode.NumNeighbors = 13;
kfoldLoss(crossval(mdlCityCode,'kfold',10))

%With 4:   0.5472 
%With 10:  0.5025
%With 13:  0.5015
%With 15:  0.5033
%With 20:  0.5095